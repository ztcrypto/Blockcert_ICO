const ethers = require('ethers');
const Data = require('./build/contracts/BlockcertToken.json');
const BYTE_CODE =
  '60806040526000805534801561001457600080fd5b50610400806100246000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680637cd49fde14610051578063c5a82d801461007c575b600080fd5b34801561005d57600080fd5b506100666101c1565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506101bf600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001909291905050506101c7565b005b60005481565b60008081548092919060010191905055507f7f5eef040fcecd5bd4869c1f7e56ff1916099746f04e814dc5c66f43c2548c6b6000548686868686604051808781526020018060200180602001806020018060200186815260200185810385528a818151815260200191508051906020019080838360005b8381101561025957808201518184015260208101905061023e565b50505050905090810190601f1680156102865780820380516001836020036101000a031916815260200191505b50858103845289818151815260200191508051906020019080838360005b838110156102bf5780820151818401526020810190506102a4565b50505050905090810190601f1680156102ec5780820380516001836020036101000a031916815260200191505b50858103835288818151815260200191508051906020019080838360005b8381101561032557808201518184015260208101905061030a565b50505050905090810190601f1680156103525780820380516001836020036101000a031916815260200191505b50858103825287818151815260200191508051906020019080838360005b8381101561038b578082015181840152602081019050610370565b50505050905090810190601f1680156103b85780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390a150505050505600a165627a7a72305820989995da4248a4c73ae7972ef9e30f933a68e7703a5462480f78f97fd6dcb4590029';
const ABI = [
  {
    constant: true,
    inputs: [],
    name: '_counter',
    outputs: [
      {
        name: '',
        type: 'uint256',
      },
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: false,
    inputs: [
      {
        name: '_accountId',
        type: 'string',
      },
      {
        name: '_hashId',
        type: 'string',
      },
      {
        name: '_hashType',
        type: 'string',
      },
      {
        name: '_hash',
        type: 'string',
      },
      {
        name: '_version',
        type: 'uint256',
      },
    ],
    name: 'addHashData',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: '_counter',
        type: 'uint256',
      },
      {
        indexed: false,
        name: '_accountId',
        type: 'string',
      },
      {
        indexed: false,
        name: '_hashId',
        type: 'string',
      },
      {
        indexed: false,
        name: '_hashType',
        type: 'string',
      },
      {
        indexed: false,
        name: '_hash',
        type: 'string',
      },
      {
        indexed: false,
        name: '_version',
        type: 'uint256',
      },
    ],
    name: 'HashAdded',
    type: 'event',
  },
];

const bcbcRpcURL = 'https://node7.blockcerts.com';
let provider = new ethers.providers.JsonRpcProvider(bcbcRpcURL);

const privateKey =
  '30b821f3d04cc818bf795540e4715fd450e64082a13e09bc32c744e6e93d38b3';
let wallet = new ethers.Wallet(privateKey, provider);

let overrides = {
  gasPrice: 1,
};

let factory = new ethers.ContractFactory(ABI, BYTE_CODE, wallet);
factory
  .deploy(overrides)
  .then((contract) => {
    console.log(contract.address);
    console.log(contract.deployTransaction.hash);
  })
  .catch((error) => {
    console.log('Error', error);
  });
